user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ログフォーマット
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # パフォーマンス設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;

    # gzip圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # ファイルサイズ制限
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # タイムアウト設定
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;

    # セキュリティヘッダー
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; form-action 'self'; base-uri 'self';" always;

    # レート制限
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # アップストリーム設定
    upstream django_backend {
        server web:8000;
        # 複数のバックエンドサーバーがある場合
        # server web2:8000 backup;
        keepalive 32;
    }

    # HTTP から HTTPS へのリダイレクト
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt用
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # ヘルスチェック用
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # HTTPS へリダイレクト
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS サーバー設定
    server {
        listen 443 ssl http2;
        server_name _;
        
        # SSL設定
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 静的ファイル
        location /static/ {
            alias /opt/statvizforge/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            gzip_static on;
        }

        # メディアファイル
        location /media/ {
            alias /opt/statvizforge/media/;
            expires 30d;
            add_header Cache-Control "public";
        }

        # API エンドポイント
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://django_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # タイムアウト設定
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # バッファリング設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # HTTP/1.1キープアライブ
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 管理画面
        location /admin/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://django_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ヘルスチェック
        location /health {
            access_log off;
            proxy_pass http://django_backend/api/v1/test/;
            proxy_set_header Host $http_host;
        }

        # フロントエンド（デフォルト）
        location / {
            # フロントエンドアプリケーションの設定
            # 必要に応じてReactやVue.jsアプリをここで配信
            root /var/www/frontend;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # エラーページ
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}