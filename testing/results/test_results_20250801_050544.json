{
  "timestamp": "2025-08-01T05:05:44.008Z",
  "date": "20250801",
  "tests": {
    "jest": {
      "success": false,
      "error": "Command failed: npm test -- --json --coverage\nsh: 1: Syntax error: word unexpected\n",
      "rawOutput": "\n> nextjs@0.1.0 test\n> jest && node scripts/test-reporter.js || (node scripts/test-reporter.js && exit 1) --json --coverage\n\n"
    },
    "e2e": {
      "success": false,
      "error": "Command failed: npm run test:e2e -- --reporter=json",
      "rawOutput": "\n> nextjs@0.1.0 test:e2e\n> playwright test --reporter=json\n\n{\n  \"config\": {\n    \"configFile\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/playwright.config.ts\",\n    \"rootDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n    \"forbidOnly\": false,\n    \"fullyParallel\": false,\n    \"globalSetup\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-utils/e2e-globalSetup.ts\",\n    \"globalTeardown\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-utils/e2e-globalTeardown.ts\",\n    \"globalTimeout\": 0,\n    \"grep\": {},\n    \"grepInvert\": null,\n    \"maxFailures\": 0,\n    \"metadata\": {},\n    \"preserveOutput\": \"always\",\n    \"reporter\": [\n      [\n        \"json\"\n      ]\n    ],\n    \"reportSlowTests\": {\n      \"max\": 5,\n      \"threshold\": 300000\n    },\n    \"quiet\": false,\n    \"projects\": [\n      {\n        \"outputDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-results\",\n        \"repeatEach\": 1,\n        \"retries\": 0,\n        \"metadata\": {},\n        \"id\": \"chromium\",\n        \"name\": \"chromium\",\n        \"testDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n        \"testIgnore\": [\n          \"**/*\"\n        ],\n        \"testMatch\": [\n          \"**/*.@(spec|test).?(c|m)[jt]s?(x)\"\n        ],\n        \"timeout\": 30000\n      },\n      {\n        \"outputDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-results\",\n        \"repeatEach\": 1,\n        \"retries\": 0,\n        \"metadata\": {},\n        \"id\": \"firefox\",\n        \"name\": \"firefox\",\n        \"testDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n        \"testIgnore\": [\n          \"**/*\"\n        ],\n        \"testMatch\": [\n          \"**/*.@(spec|test).?(c|m)[jt]s?(x)\"\n        ],\n        \"timeout\": 30000\n      },\n      {\n        \"outputDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-results\",\n        \"repeatEach\": 1,\n        \"retries\": 0,\n        \"metadata\": {},\n        \"id\": \"webkit\",\n        \"name\": \"webkit\",\n        \"testDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n        \"testIgnore\": [\n          \"**/*\"\n        ],\n        \"testMatch\": [\n          \"**/*.@(spec|test).?(c|m)[jt]s?(x)\"\n        ],\n        \"timeout\": 30000\n      },\n      {\n        \"outputDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-results\",\n        \"repeatEach\": 1,\n        \"retries\": 0,\n        \"metadata\": {},\n        \"id\": \"Mobile Chrome\",\n        \"name\": \"Mobile Chrome\",\n        \"testDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n        \"testIgnore\": [\n          \"**/*\"\n        ],\n        \"testMatch\": [\n          \"**/*.@(spec|test).?(c|m)[jt]s?(x)\"\n        ],\n        \"timeout\": 30000\n      },\n      {\n        \"outputDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/test-results\",\n        \"repeatEach\": 1,\n        \"retries\": 0,\n        \"metadata\": {},\n        \"id\": \"Mobile Safari\",\n        \"name\": \"Mobile Safari\",\n        \"testDir\": \"/home/futaro/project/StatVizForge_JikkenPy/app/frontend/e2e\",\n        \"testIgnore\": [\n          \"**/*\"\n        ],\n        \"testMatch\": [\n          \"**/*.@(spec|test).?(c|m)[jt]s?(x)\"\n        ],\n        \"timeout\": 30000\n      }\n    ],\n    \"shard\": null,\n    \"updateSnapshots\": \"missing\",\n    \"updateSourceMethod\": \"patch\",\n    \"version\": \"1.54.1\",\n    \"workers\": 1,\n    \"webServer\": null\n  },\n  \"suites\": [],\n  \"errors\": [\n    {\n      \"message\": \"Error: Process from config.webServer was not able to start. Exit code: 1\",\n      \"stack\": \"Error: Process from config.webServer was not able to start. Exit code: 1\"\n    }\n  ],\n  \"stats\": {\n    \"startTime\": \"2025-08-01T05:05:44.623Z\",\n    \"duration\": 738.0350000000001,\n    \"expected\": 0,\n    \"skipped\": 0,\n    \"unexpected\": 0,\n    \"flaky\": 0\n  }\n}\n"
    },
    "backend": {
      "success": false,
      "error": "Command failed: cd ../backend && source venv/bin/activate && python3 manage.py test --verbosity=2\nCreating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\ntest_api_response_time_compliance (api.test_api_improvements.APIImprovementsTestCase.test_api_response_time_compliance)\nAPI応答時間基準テスト ... ok\ntest_directory_creation_url_unified (api.test_api_improvements.APIImprovementsTestCase.test_directory_creation_url_unified)\nディレクトリ作成APIのURL統一テスト ... ok\ntest_error_response_format_consistency (api.test_api_improvements.APIImprovementsTestCase.test_error_response_format_consistency)\nエラーレスポンス形式の一貫性テスト ... ERROR\ntest_file_deletion_url_unified (api.test_api_improvements.APIImprovementsTestCase.test_file_deletion_url_unified)\nファイル削除APIのURL統一テスト ... ok\ntest_file_move_url_unified (api.test_api_improvements.APIImprovementsTestCase.test_file_move_url_unified)\nファイル移動APIのURL統一テスト ... ok\ntest_file_search_url_unified (api.test_api_improvements.APIImprovementsTestCase.test_file_search_url_unified)\nファイル検索APIのURL統一テスト ... ok\ntest_file_tags_query_parameter_all_files (api.test_api_improvements.APIImprovementsTestCase.test_file_tags_query_parameter_all_files)\n全ファイルタグ取得（クエリパラメータなし）テスト ... ok\ntest_file_tags_query_parameter_individual (api.test_api_improvements.APIImprovementsTestCase.test_file_tags_query_parameter_individual)\n個別ファイルタグ取得（クエリパラメータ）テスト ... ok\ntest_file_tags_save_unified_response (api.test_api_improvements.APIImprovementsTestCase.test_file_tags_save_unified_response)\nファイルタグ保存の統一レスポンステスト ... ok\ntest_search_files_by_tags_implementation (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_implementation)\nタグ検索機能実装テスト ... FAIL\ntest_search_files_by_tags_multiple_tags (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_multiple_tags)\n複数タグ検索テスト ... FAIL\ntest_search_files_by_tags_validation (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_validation)\nタグ検索バリデーションテスト ... FAIL\ntest_tag_search_response_format (api.test_api_improvements.APIImprovementsTestCase.test_tag_search_response_format)\nタグ検索レスポンス形式テスト ... FAIL\ntest_tag_workflow_integration (api.test_api_improvements.APIImprovementsTestCase.test_tag_workflow_integration)\nタグ機能ワークフロー統合テスト ... FAIL\ntest_concurrent_tag_operations (api.test_file_tags.FileTagsAPITestCase.test_concurrent_tag_operations)\n並行タグ操作テスト ... ERROR\ntest_file_tags_persistence (api.test_file_tags.FileTagsAPITestCase.test_file_tags_persistence)\nファイルタグ永続化テスト ... ERROR\ntest_get_all_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_get_all_file_tags_success)\n全ファイルタグ取得成功テスト ... ERROR\ntest_get_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_get_file_tags_success)\nファイルタグ取得成功テスト ... ERROR\ntest_project_not_found_error (api.test_file_tags.FileTagsAPITestCase.test_project_not_found_error)\n存在しないプロジェクトでのエラーテスト ... ok\ntest_save_file_tags_invalid_combination (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_invalid_combination)\n無効なタグ組み合わせテスト（項目データのみ） ... ERROR\ntest_save_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_success)\nファイルタグ保存成功テスト ... ERROR\ntest_save_file_tags_validation_error (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_validation_error)\nファイルタグ保存バリデーションエラーテスト ... FAIL\ntest_search_files_by_multiple_tags (api.test_file_tags.FileTagsAPITestCase.test_search_files_by_multiple_tags)\n複数タグによる検索テスト ... ERROR\ntest_search_files_by_tags_success (api.test_file_tags.FileTagsAPITestCase.test_search_files_by_tags_success)\nタグによるファイル検索成功テスト ... ERROR\ntest_tag_api_error_handling (api.test_file_tags.FileTagsAPITestCase.test_tag_api_error_handling)\nタグAPIエラーハンドリングテスト ... ERROR\ntest_tag_api_response_format (api.test_file_tags.FileTagsAPITestCase.test_tag_api_response_format)\nタグAPIレスポンス形式テスト ... ERROR\ntest_tag_validation_rules (api.test_file_tags.FileTagsAPITestCase.test_tag_validation_rules)\nタグバリデーションルールテスト ... ERROR\ntest_get_jupyter_status_no_instances (api.test_jupyter_api.JupyterLabAPITestCase.test_get_jupyter_status_no_instances)\nJupyterLabインスタンスなしの状態確認テスト ... ok\ntest_get_jupyter_status_running (api.test_jupyter_api.JupyterLabAPITestCase.test_get_jupyter_status_running)\nJupyterLab状態確認（起動中）テスト ... ERROR\ntest_get_jupyter_status_specific_project (api.test_jupyter_api.JupyterLabAPITestCase.test_get_jupyter_status_specific_project)\n特定プロジェクトのJupyterLab状態確認テスト ... ok\ntest_jupyter_api_error_responses (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_error_responses)\nJupyterLab API エラーレスポンス形式テスト ... ok\ntest_jupyter_api_performance (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_performance)\nJupyterLab API パフォーマンステスト ... FAIL\ntest_jupyter_api_resource_management (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_resource_management)\nJupyterLab API リソース管理テスト ... FAIL\ntest_jupyter_api_security (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_security)\nJupyterLab API セキュリティテスト ... FAIL\ntest_jupyter_service_separation (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_service_separation)\nJupyterLabサービス分離テスト ... FAIL\ntest_start_jupyter_lab_already_running (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_already_running)\n既に起動中のJupyterLabに対する処理テスト ... FAIL\ntest_start_jupyter_lab_missing_project_folder (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_missing_project_folder)\nプロジェクトフォルダ未指定エラーテスト ... ok\ntest_start_jupyter_lab_project_not_found (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_project_not_found)\n存在しないプロジェクトでのエラーテスト ... ok\ntest_start_jupyter_lab_startup_failure (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_startup_failure)\nJupyterLab起動失敗テスト ... FAIL\ntest_start_jupyter_lab_success (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_success)\nJupyterLab起動成功テスト ... FAIL\ntest_stop_jupyter_lab_not_running (api.test_jupyter_api.JupyterLabAPITestCase.test_stop_jupyter_lab_not_running)\n起動していないJupyterLabの停止テスト ... FAIL\ntest_stop_jupyter_lab_success (api.test_jupyter_api.JupyterLabAPITestCase.test_stop_jupyter_lab_success)\nJupyterLab停止成功テスト ... FAIL\ntest_full_workflow_integration (api.tests.APIIntegrationTestCase.test_full_workflow_integration)\n完全ワークフロー統合テスト：プロジェクト作成→ファイル操作→コメント→検索 ... FAIL\ntest_add_file_comment (api.tests.FileCommentsTestCase.test_add_file_comment)\nファイルコメント追加テスト ... FAIL\ntest_comment_api_validation (api.tests.FileCommentsTestCase.test_comment_api_validation)\nコメントAPI バリデーションテスト ... FAIL\ntest_delete_file_comment (api.tests.FileCommentsTestCase.test_delete_file_comment)\nファイルコメント削除テスト ... ok\ntest_get_file_comments (api.tests.FileCommentsTestCase.test_get_file_comments)\nファイルコメント取得テスト ... FAIL\ntest_update_file_comment (api.tests.FileCommentsTestCase.test_update_file_comment)\nファイルコメント更新テスト ... ok\ntest_directory_creation (api.tests.FileManagementTestCase.test_directory_creation)\nディレクトリ作成テスト ... ok\ntest_directory_tree_retrieval (api.tests.FileManagementTestCase.test_directory_tree_retrieval)\nディレクトリツリー取得テスト ... ok\ntest_file_api_error_handling (api.tests.FileManagementTestCase.test_file_api_error_handling)\nファイルAPI エラーハンドリングテスト ... ok\ntest_file_deletion (api.tests.FileManagementTestCase.test_file_deletion)\nファイル削除テスト ... ok\ntest_file_move (api.tests.FileManagementTestCase.test_file_move)\nファイル移動テスト ... ok\ntest_file_search (api.tests.FileManagementTestCase.test_file_search)\nファイル検索テスト ... ok\ntest_multiple_file_upload (api.tests.FileManagementTestCase.test_multiple_file_upload)\n複数ファイルアップロードテスト ... ok\ntest_single_file_upload (api.tests.FileManagementTestCase.test_single_file_upload)\n単一ファイルアップロードテスト ... ok\ntest_api_response_time (api.tests.ProjectAPIPerformanceTestCase.test_api_response_time)\nAPI応答時間テスト ... ok\ntest_プロジェクトライフサイクル_エラー混在 (api.tests.ProjectIntegrationTestCase.test_プロジェクトライフサイクル_エラー混在)\n正常操作とエラー操作が混在するライフサイクル ... ok\ntest_同時削除復元操作 (api.tests.ProjectIntegrationTestCase.test_同時削除復元操作)\n複数プロジェクトの同時削除・復元操作 ... ok\ntest_complete_project_lifecycle (api.tests.ProjectLifecycleTestCase.test_complete_project_lifecycle)\nプロジェクト完全ライフサイクルテスト: 作成→更新→削除→復元 ... ok\ntest_error_handling_scenarios (api.tests.ProjectLifecycleTestCase.test_error_handling_scenarios)\nエラーハンドリングシナリオテスト ... ok\ntest_language_parameter_handling (api.tests.ProjectLifecycleTestCase.test_language_parameter_handling)\n言語パラメータ処理テスト（エラーメッセージのみ） ... ok\ntest_multiple_projects_interaction (api.tests.ProjectLifecycleTestCase.test_multiple_projects_interaction)\n複数プロジェクトの相互作用テスト ... ok\ntest_タグ配列バリデーション_0__ (api.tests.ProjectValidationTestCase.test_タグ配列バリデーション_0__)\n様々なタグ配列のバリデーション [with test_name='空のタグ配列', tags=[]] ... ok\ntest_タグ配列バリデーション_1__ (api.tests.ProjectValidationTestCase.test_タグ配列バリデーション_1__)\n様々なタグ配列のバリデーション [with test_name='単一タグ', tags=['tag1']] ... ok\ntest_タグ配列バリデーション_2__ (api.tests.ProjectValidationTestCase.test_タグ配列バリデーション_2__)\n様々なタグ配列のバリデーション [with test_name='複数タグ', tags=['tag1', 'tag2', 'tag3']] ... ok\ntest_タグ配列バリデーション_3__ (api.tests.ProjectValidationTestCase.test_タグ配列バリデーション_3__)\n様々なタグ配列のバリデーション [with test_name='日本語タグ', tags=['日本語', 'テスト', 'サンプル']] ... ok\ntest_タグ配列バリデーション_4__ (api.tests.ProjectValidationTestCase.test_タグ配列バリデーション_4__)\n様々なタグ配列のバリデーション [with test_name='英数字タグ', tags=['test', 'sample', 'demo123']] ... ok\ntest_プロジェクト名バリデーション (api.tests.ProjectValidationTestCase.test_プロジェクト名バリデーション)\nプロジェクト名の長さと文字種バリデーション ... ok\ntest_重複フォルダ名チェック (api.tests.ProjectValidationTestCase.test_重複フォルダ名チェック)\nフォルダ名の重複チェック ... ok\ntest_api_versioning_compatibility (api.tests_integration.FrontendIntegrationTest.test_api_versioning_compatibility)\nAPIバージョン互換性テスト ... ok\ntest_comment_management_workflow (api.tests_integration.FrontendIntegrationTest.test_comment_management_workflow)\nコメント管理統合テスト ... ok\ntest_cors_headers (api.tests_integration.FrontendIntegrationTest.test_cors_headers)\nCORS ヘッダーテスト ... ok\ntest_error_handling_consistency (api.tests_integration.FrontendIntegrationTest.test_error_handling_consistency)\nエラーハンドリング一貫性テスト ... ok\ntest_file_management_workflow (api.tests_integration.FrontendIntegrationTest.test_file_management_workflow)\nファイル管理統合テスト ... FAIL\ntest_jupyter_management_workflow (api.tests_integration.FrontendIntegrationTest.test_jupyter_management_workflow)\nJupyterLab管理統合テスト ... ok\ntest_performance_under_frontend_load (api.tests_integration.FrontendIntegrationTest.test_performance_under_frontend_load)\nフロントエンド負荷下でのパフォーマンステスト ... ok\ntest_project_lifecycle_workflow (api.tests_integration.FrontendIntegrationTest.test_project_lifecycle_workflow)\nプロジェクトライフサイクル統合テスト ... ok\ntest_project_operations_performance (api.tests_performance.DatabasePerformanceTest.test_project_operations_performance)\nプロジェクト操作のパフォーマンステスト ... ok\ntest_file_operations_performance (api.tests_performance.EndpointSpecificPerformanceTest.test_file_operations_performance)\nファイル操作系エンドポイントのパフォーマンス ... ok\ntest_memory_usage_under_load (api.tests_performance.MemoryUsageTest.test_memory_usage_under_load)\n負荷時のメモリ使用量テスト ... ok\ntest_concurrent_requests_response_time (api.tests_performance.ResponseTimeTest.test_concurrent_requests_response_time)\n同時リクエストのレスポンス時間テスト ... ok\ntest_single_request_response_time (api.tests_performance.ResponseTimeTest.test_single_request_response_time)\n単一リクエストのレスポンス時間テスト ... ok\ntest_increasing_load_response (api.tests_performance.ScalabilityTest.test_increasing_load_response)\n負荷増加に対するレスポンス特性テスト ... ok\ntest_api_versioning_endpoints (api.tests_security.APIVersioningTest.test_api_versioning_endpoints)\nAPIバージョンエンドポイントのテスト ... ok\ntest_error_response_format (api.tests_security.ErrorResponseTest.test_error_response_format)\n統一エラーレスポンス形式のテスト ... ok\ntest_validation_error_format (api.tests_security.ErrorResponseTest.test_validation_error_format)\nバリデーションエラーの形式テスト ... ok\ntest_dangerous_file_path_rejection (api.tests_security.FileSecurityTest.test_dangerous_file_path_rejection)\n危険なファイルパスの拒否テスト ... FAIL\ntest_response_time (api.tests_security.PerformanceTest.test_response_time)\nレスポンス時間のテスト ... ok\ntest_nonexistent_project_access (api.tests_security.ProjectSecurityTest.test_nonexistent_project_access)\n存在しないプロジェクトへのアクセステスト ... ok\ntest_project_creation_validation (api.tests_security.ProjectSecurityTest.test_project_creation_validation)\nプロジェクト作成時のバリデーション ... ok\ntest_file_path_validation (api.tests_security.SecurityValidationTest.test_file_path_validation)\nファイルパスバリデーションのテスト ... ok\ntest_project_folder_validation (api.tests_security.SecurityValidationTest.test_project_folder_validation)\nプロジェクトフォルダ名バリデーションのテスト ... ok\ntest_expected_project_endpoints_exist (test_api_integration.APIEndpointDiscoveryTest.test_expected_project_endpoints_exist)\nプロジェクト関連エンドポイントの存在確認 ... ok\ntest_extract_all_backend_endpoints (test_api_integration.APIEndpointDiscoveryTest.test_extract_all_backend_endpoints)\nバックエンドの全エンドポイントを抽出 ... ok\ntest_project_list_response_structure (test_api_integration.APITypeConsistencyTest.test_project_list_response_structure)\nプロジェクト一覧のレスポンス構造テスト ... ok\ntest_server_info_response_structure (test_api_integration.APITypeConsistencyTest.test_server_info_response_structure)\nサーバー情報のレスポンス構造テスト ... ok\ntest_api_base_redirects_or_info (test_api_integration.APIVersioningTest.test_api_base_redirects_or_info)\nAPI ベースパスの応答確認 ... ok\ntest_api_v1_endpoints_accessible (test_api_integration.APIVersioningTest.test_api_v1_endpoints_accessible)\nAPIバージョン v1 のエンドポイントアクセス可能性 ... ok\ntest_api_base_url_environment_consistency (test_api_integration.FrontendBackendConsistencyTest.test_api_base_url_environment_consistency)\nAPIベースURL環境設定の一貫性 ... ok\ntest_frontend_expected_endpoints_exist (test_api_integration.FrontendBackendConsistencyTest.test_frontend_expected_endpoints_exist)\nフロントエンドが期待するエンドポイントの存在確認 ... ok\ntest_response_format_matches_frontend_expectations (test_api_integration.FrontendBackendConsistencyTest.test_response_format_matches_frontend_expectations)\nレスポンス形式がフロントエンドの期待と一致するかテスト ... ok\ntest_cors_headers_present (test_api_integration.HTTPMethodStatusCodeTest.test_cors_headers_present)\nCORS ヘッダーの存在確認 ... ok\ntest_get_methods_return_appropriate_status (test_api_integration.HTTPMethodStatusCodeTest.test_get_methods_return_appropriate_status)\nGETメソッドのステータスコードテスト ... ok\ntest_post_methods_require_data (test_api_integration.HTTPMethodStatusCodeTest.test_post_methods_require_data)\nPOSTメソッドのデータ要求テスト ... ok\ntest_01_settings_crud_operations (test_integrated_features.IntegratedFeaturesTest.test_01_settings_crud_operations)\n設定のCRUD操作テスト ... FAIL\ntest_02_ordinal_data_ordering (test_integrated_features.IntegratedFeaturesTest.test_02_ordinal_data_ordering)\n順序量データの順序設定テスト ... FAIL\ntest_03_chart_and_hover_configuration (test_integrated_features.IntegratedFeaturesTest.test_03_chart_and_hover_configuration)\nチャート・ホバー設定テスト ... FAIL\ntest_04_layout_configuration (test_integrated_features.IntegratedFeaturesTest.test_04_layout_configuration)\nレイアウト設定テスト ... FAIL\ntest_05_data_type_integration (test_integrated_features.IntegratedFeaturesTest.test_05_data_type_integration)\nデータタイプ統合テスト ... FAIL\ntest_06_error_handling (test_integrated_features.IntegratedFeaturesTest.test_06_error_handling)\nエラーハンドリングテスト ... FAIL\n\n======================================================================\nERROR: test_error_response_format_consistency (api.test_api_improvements.APIImprovementsTestCase.test_error_response_format_consistency)\nエラーレスポンス形式の一貫性テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 244, in test_error_response_format_consistency\n    data = response.json()\n           ^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/venv/lib/python3.12/site-packages/django/test/client.py\", line 948, in _parse_json\n    raise ValueError(\nValueError: Content-Type header is \"text/html; charset=utf-8\", not \"application/json\"\n\n======================================================================\nERROR: test_concurrent_tag_operations (api.test_file_tags.FileTagsAPITestCase.test_concurrent_tag_operations)\n並行タグ操作テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 265, in test_concurrent_tag_operations\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_file_tags_persistence (api.test_file_tags.FileTagsAPITestCase.test_file_tags_persistence)\nファイルタグ永続化テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 226, in test_file_tags_persistence\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_get_all_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_get_all_file_tags_success)\n全ファイルタグ取得成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 122, in test_get_all_file_tags_success\n    with patch('api.views.FileViewSet.get_all_tags') as mock_get_all:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'get_all_tags'\n\n======================================================================\nERROR: test_get_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_get_file_tags_success)\nファイルタグ取得成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 106, in test_get_file_tags_success\n    with patch('api.views.FileViewSet.get_tags') as mock_get:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'get_tags'\n\n======================================================================\nERROR: test_save_file_tags_invalid_combination (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_invalid_combination)\n無効なタグ組み合わせテスト（項目データのみ）\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 94, in test_save_file_tags_invalid_combination\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_save_file_tags_success (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_success)\nファイルタグ保存成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 63, in test_save_file_tags_success\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_search_files_by_multiple_tags (api.test_file_tags.FileTagsAPITestCase.test_search_files_by_multiple_tags)\n複数タグによる検索テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 161, in test_search_files_by_multiple_tags\n    with patch('api.views.FileViewSet.search_by_tags') as mock_search:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'search_by_tags'\n\n======================================================================\nERROR: test_search_files_by_tags_success (api.test_file_tags.FileTagsAPITestCase.test_search_files_by_tags_success)\nタグによるファイル検索成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 135, in test_search_files_by_tags_success\n    with patch('api.views.FileViewSet.search_by_tags') as mock_search:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'search_by_tags'\n\n======================================================================\nERROR: test_tag_api_error_handling (api.test_file_tags.FileTagsAPITestCase.test_tag_api_error_handling)\nタグAPIエラーハンドリングテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 280, in test_tag_api_error_handling\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_tag_api_response_format (api.test_file_tags.FileTagsAPITestCase.test_tag_api_response_format)\nタグAPIレスポンス形式テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 296, in test_tag_api_response_format\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_tag_validation_rules (api.test_file_tags.FileTagsAPITestCase.test_tag_validation_rules)\nタグバリデーションルールテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 191, in test_tag_validation_rules\n    with patch('api.views.FileViewSet.save_tags') as mock_save:\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1458, in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1431, in get_original\n    raise AttributeError(\nAttributeError: <class 'api.views.FileViewSet'> does not have the attribute 'save_tags'\n\n======================================================================\nERROR: test_get_jupyter_status_running (api.test_jupyter_api.JupyterLabAPITestCase.test_get_jupyter_status_running)\nJupyterLab状態確認（起動中）テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 144, in test_get_jupyter_status_running\n    self.assertTrue(response.data['success'])\n                    ~~~~~~~~~~~~~^^^^^^^^^^^\nKeyError: 'success'\n\n======================================================================\nFAIL: test_search_files_by_tags_implementation (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_implementation)\nタグ検索機能実装テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 274, in test_search_files_by_tags_implementation\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_search_files_by_tags_multiple_tags (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_multiple_tags)\n複数タグ検索テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 320, in test_search_files_by_tags_multiple_tags\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_search_files_by_tags_validation (api.test_api_improvements.APIImprovementsTestCase.test_search_files_by_tags_validation)\nタグ検索バリデーションテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 297, in test_search_files_by_tags_validation\n    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)\nAssertionError: 404 != 400\n\n======================================================================\nFAIL: test_tag_search_response_format (api.test_api_improvements.APIImprovementsTestCase.test_tag_search_response_format)\nタグ検索レスポンス形式テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 221, in test_tag_search_response_format\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_tag_workflow_integration (api.test_api_improvements.APIImprovementsTestCase.test_tag_workflow_integration)\nタグ機能ワークフロー統合テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_api_improvements.py\", line 369, in test_tag_workflow_integration\n    self.assertEqual(search_response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_save_file_tags_validation_error (api.test_file_tags.FileTagsAPITestCase.test_save_file_tags_validation_error)\nファイルタグ保存バリデーションエラーテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_file_tags.py\", line 83, in test_save_file_tags_validation_error\n    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)\nAssertionError: 404 != 400\n\n======================================================================\nFAIL: test_jupyter_api_performance (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_performance)\nJupyterLab API パフォーマンステスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 277, in test_jupyter_api_performance\n    self.assertEqual(len(response.data['running_instances']), 100)\nAssertionError: 0 != 100\n\n======================================================================\nFAIL: test_jupyter_api_resource_management (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_resource_management)\nJupyterLab API リソース管理テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 244, in test_jupyter_api_resource_management\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_jupyter_api_security (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_api_security)\nJupyterLab API セキュリティテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 220, in test_jupyter_api_security\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_jupyter_service_separation (api.test_jupyter_api.JupyterLabAPITestCase.test_jupyter_service_separation)\nJupyterLabサービス分離テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 206, in test_jupyter_service_separation\n    mock_service.is_service_available.assert_called()\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 913, in assert_called\n    raise AssertionError(msg)\nAssertionError: Expected 'is_service_available' to have been called.\n\n======================================================================\nFAIL: test_start_jupyter_lab_already_running (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_already_running)\n既に起動中のJupyterLabに対する処理テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 101, in test_start_jupyter_lab_already_running\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_start_jupyter_lab_startup_failure (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_startup_failure)\nJupyterLab起動失敗テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 188, in test_start_jupyter_lab_startup_failure\n    self.assertEqual(response.status_code, status.HTTP_500_INTERNAL_SERVER_ERROR)\nAssertionError: 404 != 500\n\n======================================================================\nFAIL: test_start_jupyter_lab_success (api.test_jupyter_api.JupyterLabAPITestCase.test_start_jupyter_lab_success)\nJupyterLab起動成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 56, in test_start_jupyter_lab_success\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_stop_jupyter_lab_not_running (api.test_jupyter_api.JupyterLabAPITestCase.test_stop_jupyter_lab_not_running)\n起動していないJupyterLabの停止テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 129, in test_stop_jupyter_lab_not_running\n    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)\nAssertionError: 404 != 400\n\n======================================================================\nFAIL: test_stop_jupyter_lab_success (api.test_jupyter_api.JupyterLabAPITestCase.test_stop_jupyter_lab_success)\nJupyterLab停止成功テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1390, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/test_jupyter_api.py\", line 115, in test_stop_jupyter_lab_success\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_full_workflow_integration (api.tests.APIIntegrationTestCase.test_full_workflow_integration)\n完全ワークフロー統合テスト：プロジェクト作成→ファイル操作→コメント→検索\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests.py\", line 967, in test_full_workflow_integration\n    self.assertEqual(response.status_code, status.HTTP_201_CREATED)\nAssertionError: 404 != 201\n\n======================================================================\nFAIL: test_add_file_comment (api.tests.FileCommentsTestCase.test_add_file_comment)\nファイルコメント追加テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests.py\", line 806, in test_add_file_comment\n    self.assertEqual(response.status_code, status.HTTP_201_CREATED)\nAssertionError: 404 != 201\n\n======================================================================\nFAIL: test_comment_api_validation (api.tests.FileCommentsTestCase.test_comment_api_validation)\nコメントAPI バリデーションテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests.py\", line 863, in test_comment_api_validation\n    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)\nAssertionError: 404 != 400\n\n======================================================================\nFAIL: test_get_file_comments (api.tests.FileCommentsTestCase.test_get_file_comments)\nファイルコメント取得テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests.py\", line 776, in test_get_file_comments\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_file_management_workflow (api.tests_integration.FrontendIntegrationTest.test_file_management_workflow)\nファイル管理統合テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests_integration.py\", line 112, in test_file_management_workflow\n    self.assertIn(response.status_code, [200, 201, 404])\nAssertionError: 405 not found in [200, 201, 404]\n\n======================================================================\nFAIL: test_dangerous_file_path_rejection (api.tests_security.FileSecurityTest.test_dangerous_file_path_rejection)\n危険なファイルパスの拒否テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/api/tests_security.py\", line 180, in test_dangerous_file_path_rejection\n    self.assertIn(response.status_code, [400, 404])\nAssertionError: 405 not found in [400, 404]\n\n======================================================================\nFAIL: test_01_settings_crud_operations (test_integrated_features.IntegratedFeaturesTest.test_01_settings_crud_operations)\n設定のCRUD操作テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 114, in test_01_settings_crud_operations\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_02_ordinal_data_ordering (test_integrated_features.IntegratedFeaturesTest.test_02_ordinal_data_ordering)\n順序量データの順序設定テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 213, in test_02_ordinal_data_ordering\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_03_chart_and_hover_configuration (test_integrated_features.IntegratedFeaturesTest.test_03_chart_and_hover_configuration)\nチャート・ホバー設定テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 257, in test_03_chart_and_hover_configuration\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_04_layout_configuration (test_integrated_features.IntegratedFeaturesTest.test_04_layout_configuration)\nレイアウト設定テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 296, in test_04_layout_configuration\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_05_data_type_integration (test_integrated_features.IntegratedFeaturesTest.test_05_data_type_integration)\nデータタイプ統合テスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 375, in test_05_data_type_integration\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n======================================================================\nFAIL: test_06_error_handling (test_integrated_features.IntegratedFeaturesTest.test_06_error_handling)\nエラーハンドリングテスト\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/futaro/project/StatVizForge_JikkenPy/app/backend/test_integrated_features.py\", line 421, in test_06_error_handling\n    self.assertEqual(response.status_code, status.HTTP_200_OK)\nAssertionError: 404 != 200\n\n----------------------------------------------------------------------\nRan 111 tests in 0.726s\n\nFAILED (failures=27, errors=13)\nDestroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\n",
      "rawOutput": "Found 111 test(s).\nOperations to perform:\n  Synchronize unmigrated apps: corsheaders, messages, rest_framework, staticfiles\n  Apply all migrations: admin, api, auth, contenttypes, sessions\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying api.0001_initial... OK\n  Applying api.0002_alter_dataanalysis_id_alter_project_id_and_more... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying auth.0012_alter_user_first_name_max_length... OK\n  Applying sessions.0001_initial... OK\nSystem check identified no issues (0 silenced).\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_ivjlbx2p\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_tz33eoah\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_nfrt300d\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_rgu3b7it\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_f0btcq54\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_e4vp8dj6\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_r_h6l3u1\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_9xhiu2xd\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_q8r7orxx\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_crtiawyk\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_gylvr6iz\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_wb0tx0kz\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_aypnb42u\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_qphj6932\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_fsceqbvu\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_i6ne0rqe\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n✅ プロジェクトバックアップ作成完了: /tmp/django_test_backup_t9zitl9z\n✅ プロジェクトフォルダ復元完了\n🧹 バックアップファイル削除完了\n\n=== 完全ワークフロー統合テスト開始 ===\n✓ Phase 1: プロジェクト作成成功 - bf630fd4-6932-4980-8576-052ac773ec11\n✓ Phase 2: ファイルアップロード成功\n✓ Phase 3: ファイルツリー取得成功\n\n=== ファイルコメント追加テスト開始 ===\n\n=== コメントAPI バリデーションテスト開始 ===\n\n=== ファイルコメント削除テスト開始 ===\n✓ ファイルコメント削除成功\n=== ファイルコメント削除テスト完了 ===\n\n=== ファイルコメント取得テスト開始 ===\n\n=== ファイルコメント更新テスト開始 ===\n✓ ファイルコメント更新成功\n=== ファイルコメント更新テスト完了 ===\n\n=== ディレクトリ作成テスト開始 ===\n✓ ディレクトリ作成成功\n=== ディレクトリ作成テスト完了 ===\n\n=== ディレクトリツリー取得テスト開始 ===\n✓ ディレクトリツリー取得成功\n=== ディレクトリツリー取得テスト完了 ===\n\n=== ファイルAPI エラーハンドリングテスト開始 ===\n✓ 存在しないプロジェクトフォルダエラー確認\n✓ 検索クエリなしエラー確認\n✓ 無効な検索タイプエラー確認\n✓ ファイルパスなし削除エラー確認\n=== ファイルAPI エラーハンドリングテスト完了 ===\n\n=== ファイル削除テスト開始 ===\n✓ ファイル削除成功\n✓ コメントクリーンアップ実行確認\n=== ファイル削除テスト完了 ===\n\n=== ファイル移動テスト開始 ===\n✓ ファイル移動成功\n✓ コメントパス更新確認\n=== ファイル移動テスト完了 ===\n\n=== ファイル検索テスト開始 ===\n✓ ファイル名検索成功\n✓ 検索結果にコメント情報統合確認\n=== ファイル検索テスト完了 ===\n\n=== 複数ファイルアップロードテスト開始 ===\n✓ 複数ファイルアップロード成功\n=== 複数ファイルアップロードテスト完了 ===\n\n=== 単一ファイルアップロードテスト開始 ===\n✓ 単一ファイルアップロード成功\n=== 単一ファイルアップロードテスト完了 ===\n\n=== パフォーマンステスト開始 ===\n✓ プロジェクト一覧取得応答時間: 0.000秒\n=== パフォーマンステスト完了 ===\n\n=== エラー混在ライフサイクルテスト開始 ===\n✓ 正常プロジェクト作成\n✓ 存在しないプロジェクト取得エラー確認\n✓ 存在しないプロジェクト更新エラー確認\n✓ 正常プロジェクト更新成功\n✓ 正常プロジェクト削除成功\n✓ 削除済みプロジェクト再削除エラー確認\n✓ 削除済みプロジェクト復元成功\n✓ 存在しないプロジェクト復元エラー確認\n=== エラー混在ライフサイクルテスト完了 ===\n\n=== 同時削除復元操作テスト開始 ===\n✓ プロジェクト1作成完了\n✓ プロジェクト2作成完了\n✓ プロジェクト3作成完了\n✓ プロジェクト4作成完了\n✓ プロジェクト5作成完了\n✓ プロジェクト1削除完了\n✓ プロジェクト3削除完了\n✓ プロジェクト5削除完了\n✓ 削除済み一覧確認: 3件\n✓ プロジェクト復元完了: 並行テストプロジェクト1\n=== 同時削除復元操作テスト完了 ===\n\n=== プロジェクト完全ライフサイクルテスト開始 ===\n\nPhase 1: プロジェクト作成\nDEBUG: Create project response status: 201\nDEBUG: Create project response data: {'folder_name': 'test_project_2f20bc8a', 'project_name': 'テストプロジェクト', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': '727f1a2a-5d9d-40ba-b923-638fa8ee8d5c', 'created_date': '2025-08-01T14:05:46.178076', 'modified_date': '2025-08-01T14:05:46.178076'}\n✓ プロジェクト作成成功: 727f1a2a-5d9d-40ba-b923-638fa8ee8d5c\n\nPhase 2: プロジェクト詳細取得\nDEBUG: Get project response status: 200\nDEBUG: Get project response data: {'folder_name': 'test_project_2f20bc8a', 'project_name': 'テストプロジェクト', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': '727f1a2a-5d9d-40ba-b923-638fa8ee8d5c', 'created_date': '2025-08-01T14:05:46.178076', 'modified_date': '2025-08-01T14:05:46.178076'}\n✓ プロジェクト取得成功: テストプロジェクト\n\nPhase 3: プロジェクト更新\nDEBUG: Update project response status: 200\nDEBUG: Update project response data: {'folder_name': 'test_project_2f20bc8a', 'project_name': 'テストプロジェクト - 更新済み', 'description': '更新されたプロジェクト説明', 'tags': ['lifecycle'], 'status': 'active', 'id': '727f1a2a-5d9d-40ba-b923-638fa8ee8d5c', 'created_date': '2025-08-01T14:05:46.178076', 'modified_date': '2025-08-01T14:05:46.180075'}\n✓ プロジェクト更新成功: テストプロジェクト - 更新済み\n\nPhase 4: プロジェクト削除\nDEBUG: Delete project response status: 204\nDEBUG: Delete project response data: None\n✓ プロジェクト削除成功: 727f1a2a-5d9d-40ba-b923-638fa8ee8d5c\n\nPhase 5: 削除済み一覧確認\n✓ 削除済み一覧取得成功: 1 件 (スキップ)\n\nPhase 6: プロジェクト復元\nDEBUG RESTORE: status=200, data={'folder_name': 'test_project_2f20bc8a', 'project_name': 'テストプロジェクト - 更新済み', 'description': '更新されたプロジェクト説明', 'tags': ['lifecycle'], 'status': 'active', 'id': '727f1a2a-5d9d-40ba-b923-638fa8ee8d5c', 'created_date': '2025-08-01T14:05:46.178076', 'modified_date': '2025-08-01T14:05:46.180075', 'restored_date': '2025-08-01T14:05:46.180753'}\n✓ プロジェクト復元成功: テストプロジェクト - 更新済み\n\nPhase 7: 最終状態確認\nDEBUG: Get project response status: 200\nDEBUG: Get project response data: {'folder_name': 'test_project_2f20bc8a', 'project_name': 'テストプロジェクト - 更新済み', 'description': '更新されたプロジェクト説明', 'tags': ['lifecycle'], 'status': 'active', 'id': '727f1a2a-5d9d-40ba-b923-638fa8ee8d5c', 'created_date': '2025-08-01T14:05:46.178076', 'modified_date': '2025-08-01T14:05:46.180075', 'restored_date': '2025-08-01T14:05:46.180753'}\n✓ 最終状態確認成功: 復元日時 2025-08-01T14:05:46.180753\n\n=== プロジェクト完全ライフサイクルテスト完了 ===\n\n=== エラーハンドリングテスト開始 ===\n✓ 存在しないプロジェクト取得 - 404エラー確認\n✓ 存在しないプロジェクト削除 - 404エラー確認\n✓ 存在しないプロジェクト復元 - 404エラー確認\n✓ 不正なリクエストデータ - 400エラー確認\n=== エラーハンドリングテスト完了 ===\n\n=== 言語パラメータテスト開始 ===\n✓ 日本語エラーメッセージ: プロジェクトが見つかりません\n✓ 英語エラーメッセージ: Project not found\n=== 言語パラメータテスト完了 ===\n\n=== 複数プロジェクト相互作用テスト開始 ===\nDEBUG: Create project response status: 201\nDEBUG: Create project response data: {'folder_name': 'test_multi_0_889e6f8f', 'project_name': 'マルチテストプロジェクト1', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': 'b705363b-36a1-41b8-a891-2c938b4d8384', 'created_date': '2025-08-01T14:05:46.190838', 'modified_date': '2025-08-01T14:05:46.190838'}\n✓ プロジェクト1作成: マルチテストプロジェクト1\nDEBUG: Create project response status: 201\nDEBUG: Create project response data: {'folder_name': 'test_multi_1_7b61e96b', 'project_name': 'マルチテストプロジェクト2', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': 'f218a538-df77-4e3e-9450-c97b9e9011d2', 'created_date': '2025-08-01T14:05:46.191776', 'modified_date': '2025-08-01T14:05:46.191776'}\n✓ プロジェクト2作成: マルチテストプロジェクト2\nDEBUG: Create project response status: 201\nDEBUG: Create project response data: {'folder_name': 'test_multi_2_9fcd027f', 'project_name': 'マルチテストプロジェクト3', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': '27508491-bc8d-40ac-aeec-a9a074db2382', 'created_date': '2025-08-01T14:05:46.192339', 'modified_date': '2025-08-01T14:05:46.192339'}\n✓ プロジェクト3作成: マルチテストプロジェクト3\nDEBUG: Delete project response status: 204\nDEBUG: Delete project response data: None\nDEBUG: Delete project response status: 204\nDEBUG: Delete project response data: None\n✓ プロジェクト削除: マルチテストプロジェクト1, マルチテストプロジェクト3\nDEBUG RESTORE: status=200, data={'folder_name': 'test_multi_0_889e6f8f', 'project_name': 'マルチテストプロジェクト1', 'description': 'ライフサイクルテスト用プロジェクト', 'tags': ['lifecycle'], 'status': 'active', 'id': 'b705363b-36a1-41b8-a891-2c938b4d8384', 'created_date': '2025-08-01T14:05:46.190838', 'modified_date': '2025-08-01T14:05:46.190838', 'restored_date': '2025-08-01T14:05:46.193349'}\n✓ プロジェクト復元: マルチテストプロジェクト1\n=== 複数プロジェクト相互作用テスト完了 ===\n\n=== タグバリデーションテスト: 空のタグ配列 ===\n✓ 空のタグ配列 - 成功: []\n\n=== タグバリデーションテスト: 単一タグ ===\n✓ 単一タグ - 成功: ['tag1']\n\n=== タグバリデーションテスト: 複数タグ ===\n✓ 複数タグ - 成功: ['tag1', 'tag2', 'tag3']\n\n=== タグバリデーションテスト: 日本語タグ ===\n✓ 日本語タグ - 成功: ['日本語', 'テスト', 'サンプル']\n\n=== タグバリデーションテスト: 英数字タグ ===\n✓ 英数字タグ - 成功: ['test', 'sample', 'demo123']\n\n=== プロジェクト名バリデーションテスト開始 ===\n✓ 正常なプロジェクト名 - 成功\n✓ 空文字プロジェクト名 - エラー確認\n✓ 長すぎるプロジェクト名 - エラー確認\n=== プロジェクト名バリデーションテスト完了 ===\n\n=== 重複フォルダ名チェックテスト開始 ===\n✓ 最初のプロジェクト作成成功\n✓ 重複フォルダ名エラー確認\n=== 重複フォルダ名チェックテスト完了 ===\n\nFrontend Load Test Results:\nAverage sequence time: 0.001s\nTotal iterations: 5\nRequests per sequence: 3\n\n=== Database Operations Performance ===\nCreate operation:\n  Average: 0.000s\n  Max: 0.001s\nList operation:\n  Average: 0.000s\n  Max: 0.000s\n\n/api/v1/files/tree/file_perf_test/:\n  Average: 0.000s\n  Max: 0.000s\n\n/api/v1/files/descriptions/file_perf_test/:\n  Average: 0.000s\n  Max: 0.000s\n\n/api/v1/files/tags/file_perf_test/:\n  Average: 0.000s\n  Max: 0.000s\n\n=== Memory Usage Test Results ===\nInitial memory: 73.1MB\nFinal memory: 73.1MB\nTotal increase: 0.0MB\nRequests processed: 100\n\n=== Concurrent Request Performance Results ===\nUsers: 10, Requests per user: 5\nTotal requests: 50\nAverage response time: 0.000s\nMax response time: 0.000s\n95th percentile: 0.000s\n\n=== Single Request Performance Results ===\n/api/v1/projects/:\n  Average: 0.000s\n  Max: 0.001s\n  Min: 0.000s\n/api/v1/server-info/:\n  Average: 0.000s\n  Max: 0.000s\n  Min: 0.000s\n/api/v1/test/:\n  Average: 0.000s\n  Max: 0.000s\n  Min: 0.000s\n\n=== Scalability Test Results ===\nLoad level 1 users:\n  Requests: 2\n  Average: 0.000s\n  Max: 0.000s\nLoad level 5 users:\n  Requests: 10\n  Average: 0.000s\n  Max: 0.000s\nLoad level 10 users:\n  Requests: 20\n  Average: 0.000s\n  Max: 0.000s\nLoad level 20 users:\n  Requests: 40\n  Average: 0.000s\n  Max: 0.000s\n  Performance ratio vs load 10: 1.10x\nFound endpoints via reverse: ['/api/projects/', '/api/server-info/']\nWorking endpoints via manual test: ['/api/v1/projects/', '/api/v1/server-info/', '/api/v1/test/']\n✓ レスポンス形式がフロントエンドの期待と一致しています\nテスト1: 設定のCRUD操作\n\nテスト2: 順序量データの順序設定\n\nテスト3: チャート・ホバー設定\n\nテスト4: レイアウト設定\n\nテスト5: データタイプ統合\n\nテスト6: エラーハンドリング\n"
    }
  }
}